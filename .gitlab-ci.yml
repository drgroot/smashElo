stages:
  - test
  - deploy
  - trigger

image: node
before_script:
  - npm install

eslint:
  stage: test
  script:
    - npx eslint src

build:
  stage: test
  script:
    - npm run-script build

tests:
  image: docker:stable
  stage: test
  services:
    - docker:dind
  except:
    - master
  variables:
    MONGODB: mongodb://docker/
    RABBITMQ: amqp://docker/
  before_script:
    - docker run -d -p "5672:5672" --name rabbitmq rabbitmq
    - docker run -d -p "27017:27017" --name mongo mongo
    - apk add --update nodejs npm alpine-sdk
    - npm install
    - docker run -d --link=rabbitmq --link=mongo -e MONGODB=mongodb://mongo/ -e RABBITMQ=amqp://rabbitmq/ --name dbapi $REGISTRY/smashelo/dbapi
  script:
    - npm test

deploy_github:
  image: docker:git
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  only:
    - master
  before_script:
    - git checkout $CI_COMMIT_REF_NAME
    - git remote rm origin
  script:
    - git remote add origin https://drgroot:$GITHUB_TOKEN@github.com/drgroot/smashElo.git
    - git push origin $CI_COMMIT_REF_NAME

deploy_pages:
  stage: deploy
  variables:
    NODE_ENV: production
    BRANCH: gh-pages
  script:
    - apt-get update
    - apt-get install -y git
    - npm run-script build
    - rm -rf .git
    - cd build
    - git init
    - git add .
    - git config --global user.name 'Autogen'
    - git config --global user.email 'autogen@github.com'
    - git commit -a -m "$CI_COMMIT_SHA"
    - git checkout -b $BRANCH
    - if [ -z "$GITHUB_TOKEN" ]; then exit 0; fi
    - git remote add origin https://drgroot:$GITHUB_TOKEN@github.com/drgroot/smashElo.git
    - git push origin $BRANCH --force

deploy_image:
  stage: deploy
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - if [ ! -z $DOCKER_PASSWORD ]; then docker login --username drgroot -p $DOCKER_PASSWORD https://mordor.yusufali.ca; fi
  script:
    - docker build --network host -t mordor.yusufali.ca/$CI_PROJECT_PATH .
    - if [ ! -z $DOCKER_PASSWORD ]; then docker push mordor.yusufali.ca/$CI_PROJECT_PATH; fi

trigger_build:
  image: curlimages/curl
  stage: trigger
  before_script:
    - echo "Triggering deployment"
  script:
    - if [ -z $DEPLOYMENT_TRIGGER ]; then exit 0; fi
    - curl -X POST -F token=$DEPLOYMENT_TRIGGER -F ref=master https://mordor.yusufali.ca/gitlab/api/v4/projects/67/trigger/pipeline